services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: local
    command: ["air", "-c", ".air.toml"]
    ports:
      - "18877:18877"
    volumes:
      - .:/app
    env_file:
      - ./.env
    environment:
      - REPLACEME_DATABASE_DSN=host=postgres user=postgres password=local_fake dbname=postgres port=5432 sslmode=disable TimeZone=GMT
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317

    depends_on:
      postgres:
        condition: service_healthy
      otel-collector:
        condition: service_started
#      jaeger-all-in-one:
#        condition: service_started
#      zipkin-all-in-one: 
#        condition: service_started
#      prometheus:
#        condition: service_started

  postgres:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: local_fake
    volumes:
      - postgres-data:/var/lib/postgresql/data
#      - ./seeds:/seeds
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    environment:
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    restart: always
    ports:
      - "9411:9411"

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one


volumes:
  postgres-data:
